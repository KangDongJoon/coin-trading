services:
  mysql:
    image: mysql:latest
    container_name: mysql
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${ROOT_PASSWORD}
      - MYSQL_DATABASE=cointrading
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: redis
    environment:
      - REDIS_PASSWORD=${DB_PASSWORD}
    command: >
      redis-server 
      --appendonly yes 
      --requirepass ${DB_PASSWORD}
    volumes:
      - redis-data:/data
    networks:
      - app-network
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${DB_PASSWORD}", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  cointrading:
    image: ${DOCKER_USERNAME}/cointrading:latest
    container_name: cointrading
    ports:
      - "8080:8080"
    environment:
      - TZ=Asia/Seoul
      - DB_HOST=mysql
      - SPRING_REDIS_HOST=redis
      - REDIS_HOST=${REDIS_HOST}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - AES_SECRET_KEY=${AES_SECRET_KEY}
      - DB_URL=${DB_URL}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network
    restart: always

volumes:
  redis-data:
  mysql-data:

networks:
  app-network:
    driver: bridge
